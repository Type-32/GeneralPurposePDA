# This file was generated by SquareLine Studio
# SquareLine Studio version: SquareLine Studio 1.4.2
# LVGL version: 9.1.0
# Project name: SquareLine_Project

import lvgl as lv
import ui_images
import ui_events

dispp = lv.display_get_default()
theme = lv.theme_default_init(dispp, lv.palette_main(lv.PALETTE.BLUE), lv.palette_main(lv.PALETTE.RED), False, lv.font_default())
dispp.set_theme(theme)

def ui_theme_set(idx):
   return

def SetFlag( obj, flag, value):
    if (value):
        obj.add_flag(flag)
    else:
        obj.remove_flag(flag)
    return

_ui_comp_table = {}
_ui_comp_prev = None
_ui_name_prev = None
_ui_child_prev = None
_ui_comp_table.clear()

def _ui_comp_del_event(e):
    target = e.get_target()
    _ui_comp_table[id(target)].remove()

def ui_comp_get_child(comp, child_name):
    return _ui_comp_table[id(comp)][child_name]

def ui_comp_get_root_from_child(child, compname):
    for component in _ui_comp_table:
        if _ui_comp_table[component]["_CompName"]==compname:
            for part in _ui_comp_table[component]:
                if id(_ui_comp_table[component][part]) == id(child):
                    return _ui_comp_table[component]
    return None
def SetBarProperty(target, id, val):
   if id == 'Value_with_anim': target.set_value(val, lv.ANIM.ON)
   if id == 'Value': target.set_value(val, lv.ANIM.OFF)
   return

def SetPanelProperty(target, id, val):
   if id == 'Position_X': target.set_x(val)
   if id == 'Position_Y': target.set_y(val)
   if id == 'Width': target.set_width(val)
   if id == 'Height': target.set_height(val)
   return

def SetDropdownProperty(target, id, val):
   if id == 'Selected':
      target.set_selected(val)
   return

def SetImageProperty(target, id, val, val2):
   if id == 'Image': target.set_src(val)
   if id == 'Angle': target.set_rotation(val2)
   if id == 'Zoom': target.set_scale(val2)
   return

def SetLabelProperty(target, id, val):
   if id == 'Text': target.set_text(val)
   return

def SetRollerProperty(target, id, val):
   if id == 'Selected':
      target.set_selected(val, lv.ANIM.OFF)
   if id == 'Selected_with_anim':
      target.set_selected(val, lv.ANIM.ON)
   return

def SetSliderProperty(target, id, val):
   if id == 'Value_with_anim': target.set_value(val, lv.ANIM.ON)
   if id == 'Value': target.set_value(val, lv.ANIM.OFF)
   return

def ChangeScreen( src, fademode, speed, delay):
    lv.screen_load_anim(src, fademode, speed, delay, False)
    return

def DeleteScreen(src):
    return

def IncrementArc( trg, val):
    trg.set_value(trg.get_value()+val)
    trg.send_event(lv.EVENT.VALUE_CHANGED, None)
    return

def IncrementBar( trg, val, anim):
    trg.set_value(trg.get_value()+val,anim)
    return

def IncrementSlider( trg, val, anim):
    trg.set_value(trg.get_value()+val,anim)
    trg.send_event(lv.EVENT.VALUE_CHANGED, None)
    return

def KeyboardSetTarget( keyboard, textarea):
    keyboard.set_textarea(textarea)
    return

def ModifyFlag( obj, flag, value):
    if (value=="TOGGLE"):
        if ( obj.has_flag(flag) ):
            obj.remove_flag(flag)
        else:
            obj.add_flag(flag)
        return

    if (value=="ADD"):
        obj.add_flag(flag)
    else:
        obj.remove_flag(flag)
    return

def ModifyState( obj, state, value):
    if (value=="TOGGLE"):
        if ( obj.has_state(state) ):
            obj.remove_state(state)
        else:
            obj.add_state(state)
        return

    if (value=="ADD"):
        obj.add_state(state)
    else:
        obj.remove_state(state)
    return

def TextAreaMoveCursor( trg, val):
    if val=="UP" : trg.cursor_up()
    if val=="RIGHT" : trg.cursor_right()
    if val=="DOWN" : trg.cursor_down()
    if val=="LEFT" : trg.cursor_left()
    trg.add_state(lv.STATE.FOCUSED)
    return

def set_opacity(obj, v):
    obj.set_style_opa(v, lv.STATE.DEFAULT|lv.PART.MAIN)
    return

def SetTextValueArc( trg, src, prefix, postfix):
    trg.set_text(prefix+str(src.get_value())+postfix)
    return

def SetTextValueSlider( trg, src, prefix, postfix):
    trg.set_text(prefix+str(src.get_value())+postfix)
    return

def SetTextValueChecked( trg, src, txton, txtoff):
    if src.has_state(lv.STATE.CHECKED):
        trg.set_text(txton)
    else:
        trg.set_text(txtoff)
    return

def StepSpinbox( trg, val):
    if val==1 : trg.increment()
    if val==-1 : trg.decrement()
    trg.send_event(lv.EVENT.VALUE_CHANGED, None)
    return

def SwitchTheme(val):
    ui_theme_set(val)
    return

# COMPONENTS

 # COMPONENT App

def comp_App_AppButton_eventhandler(event_struct):
   target = event_struct.get_target()
   comp_App = ui_comp_get_root_from_child(target, "App")
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def ui_App_create(comp_parent):
    cui_App = lv.obj(comp_parent)
    cui_App.remove_style_all()
    cui_App.set_width(100)
    cui_App.set_height(100)
    cui_App.set_x(-200)
    cui_App.set_y(-30)
    cui_App.set_align( lv.ALIGN.CENTER)
    SetFlag(cui_App, lv.obj.FLAG.CLICKABLE, False)
    SetFlag(cui_App, lv.obj.FLAG.SCROLLABLE, False)
    cui_AppButton = lv.button(cui_App)
    cui_AppButton.set_width(80)
    cui_AppButton.set_height(80)
    cui_AppButton.set_align( lv.ALIGN.TOP_MID)
    SetFlag(cui_AppButton, lv.obj.FLAG.SCROLLABLE, False)
    SetFlag(cui_AppButton, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
    cui_AppButton.set_style_bg_color(lv.color_hex(0x5385ED), lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_AppButton.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
    cui_AppIcon = lv.label(cui_AppButton)
    cui_AppIcon.set_text("BYD")
    cui_AppIcon.set_width(lv.SIZE_CONTENT)	# 1
    cui_AppIcon.set_height(lv.SIZE_CONTENT)   # 1
    cui_AppIcon.set_align( lv.ALIGN.CENTER)
    cui_AppButton.add_event_cb(comp_App_AppButton_eventhandler, lv.EVENT.ALL, None)
    cui_AppTitle = lv.label(cui_App)
    cui_AppTitle.set_text("AppTitle")
    cui_AppTitle.set_width(lv.SIZE_CONTENT)	# 1
    cui_AppTitle.set_height(lv.SIZE_CONTENT)   # 1
    cui_AppTitle.set_align( lv.ALIGN.BOTTOM_MID)
    _ui_comp_table[id(cui_App)]= {"App" : cui_App,"AppButton" : cui_AppButton,"AppButton_AppIcon" : cui_AppIcon,"AppTitle" : cui_AppTitle, "_CompName" : "App"}
    return cui_App

 # COMPONENT Notification

def comp_Notification_Notification_eventhandler(event_struct):
   target = event_struct.get_target()
   comp_Notification = ui_comp_get_root_from_child(target, "Notification")
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def ui_Notification_create(comp_parent):
    cui_Notification = lv.button(comp_parent)
    cui_Notification.set_height(70)
    cui_Notification.set_width(lv.pct(100))
    cui_Notification.set_align( lv.ALIGN.CENTER)
    cui_Notification.set_flex_flow(lv.FLEX_FLOW.COLUMN)
    cui_Notification.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
    SetFlag(cui_Notification, lv.obj.FLAG.SCROLLABLE, False)
    SetFlag(cui_Notification, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
    cui_Notification.set_style_bg_color(lv.color_hex(0xFFFFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_Notification.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
    cui_Notification.set_style_outline_color(lv.color_hex(0x000000), lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_Notification.set_style_outline_opa(50, lv.PART.MAIN| lv.STATE.DEFAULT )
    cui_Notification.set_style_outline_width( 1, lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_Notification.set_style_outline_pad( 0, lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_NotificationTitle = lv.label(cui_Notification)
    cui_NotificationTitle.set_text("Title")
    cui_NotificationTitle.set_width(lv.pct(100))
    cui_NotificationTitle.set_height(lv.SIZE_CONTENT)   # 100
    cui_NotificationTitle.set_align( lv.ALIGN.CENTER)
    cui_NotificationTitle.set_style_text_color(lv.color_hex(0x007EE3), lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_NotificationTitle.set_style_text_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
    cui_NotificationText = lv.label(cui_Notification)
    cui_NotificationText.set_text("text\nsasdsa")
    cui_NotificationText.set_width(lv.pct(100))
    cui_NotificationText.set_height(lv.SIZE_CONTENT)   # 100
    cui_NotificationText.set_align( lv.ALIGN.CENTER)
    cui_NotificationText.set_style_text_color(lv.color_hex(0x000000), lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_NotificationText.set_style_text_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
    cui_Notification.add_event_cb(comp_Notification_Notification_eventhandler, lv.EVENT.ALL, None)
    _ui_comp_table[id(cui_Notification)]= {"Notification" : cui_Notification,"NotificationTitle" : cui_NotificationTitle,"NotificationText" : cui_NotificationText, "_CompName" : "Notification"}
    return cui_Notification

 # COMPONENT OptionsModal
def ui_OptionsModal_create(comp_parent):
    cui_OptionsModal = lv.obj(comp_parent)
    cui_OptionsModal.set_width(lv.pct(60))
    cui_OptionsModal.set_height(lv.SIZE_CONTENT)   # 50
    cui_OptionsModal.set_align( lv.ALIGN.CENTER)
    cui_OptionsModal.set_flex_flow(lv.FLEX_FLOW.COLUMN)
    cui_OptionsModal.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
    SetFlag(cui_OptionsModal, lv.obj.FLAG.SCROLLABLE, False)
    cui_ModalTitle = lv.label(cui_OptionsModal)
    cui_ModalTitle.set_text("ModalTitle")
    cui_ModalTitle.set_width(lv.pct(100))
    cui_ModalTitle.set_height(lv.SIZE_CONTENT)   # 1
    cui_ModalTitle.set_style_text_color(lv.color_hex(0x4C4C4C), lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_ModalTitle.set_style_text_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
    cui_ModalTitle.set_style_text_letter_space( 1, lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_ModalTitle.set_style_text_line_space( 0, lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_ModalTitle.set_style_text_font( lv.font_montserrat_18, lv.PART.MAIN | lv.STATE.DEFAULT )
    cui_ModalContent = lv.label(cui_OptionsModal)
    cui_ModalContent.set_text("text")
    cui_ModalContent.set_width(lv.pct(100))
    cui_ModalContent.set_height(lv.SIZE_CONTENT)   # 1
    cui_ModalContent.set_align( lv.ALIGN.CENTER)
    cui_Options = lv.obj(cui_OptionsModal)
    cui_Options.remove_style_all()
    cui_Options.set_height(40)
    cui_Options.set_width(lv.pct(100))
    cui_Options.set_align( lv.ALIGN.CENTER)
    cui_Options.set_flex_flow(lv.FLEX_FLOW.ROW)
    cui_Options.set_flex_align(lv.FLEX_ALIGN.SPACE_EVENLY, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
    SetFlag(cui_Options, lv.obj.FLAG.CLICKABLE, False)
    SetFlag(cui_Options, lv.obj.FLAG.SCROLLABLE, False)
    cui_Opt1 = lv.button(cui_Options)
    cui_Opt1.set_height(50)
    cui_Opt1.set_flex_grow(1)
    cui_Opt1.set_align( lv.ALIGN.CENTER)
    SetFlag(cui_Opt1, lv.obj.FLAG.SCROLLABLE, False)
    SetFlag(cui_Opt1, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
    cui_Opt1Text = lv.label(cui_Opt1)
    cui_Opt1Text.set_text("Option1")
    cui_Opt1Text.set_width(lv.SIZE_CONTENT)	# 1
    cui_Opt1Text.set_height(lv.SIZE_CONTENT)   # 1
    cui_Opt1Text.set_align( lv.ALIGN.CENTER)
    cui_Container9 = lv.obj(cui_Options)
    cui_Container9.remove_style_all()
    cui_Container9.set_width(10)
    cui_Container9.set_height(lv.pct(100))
    cui_Container9.set_align( lv.ALIGN.CENTER)
    SetFlag(cui_Container9, lv.obj.FLAG.CLICKABLE, False)
    SetFlag(cui_Container9, lv.obj.FLAG.SCROLLABLE, False)
    cui_Opt2 = lv.button(cui_Options)
    cui_Opt2.set_height(50)
    cui_Opt2.set_flex_grow(1)
    cui_Opt2.set_align( lv.ALIGN.CENTER)
    SetFlag(cui_Opt2, lv.obj.FLAG.SCROLLABLE, False)
    SetFlag(cui_Opt2, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
    cui_Option2Text = lv.label(cui_Opt2)
    cui_Option2Text.set_text("Option2")
    cui_Option2Text.set_width(lv.SIZE_CONTENT)	# 1
    cui_Option2Text.set_height(lv.SIZE_CONTENT)   # 1
    cui_Option2Text.set_align( lv.ALIGN.CENTER)
    _ui_comp_table[id(cui_OptionsModal)]= {"OptionsModal" : cui_OptionsModal,"ModalTitle" : cui_ModalTitle,"ModalContent" : cui_ModalContent,"Options" : cui_Options,"Options_Opt1" : cui_Opt1,"Options_Opt1_Opt1Text" : cui_Opt1Text,"Options_Container9" : cui_Container9,"Options_Opt2" : cui_Opt2,"Options_Opt2_Option2Text" : cui_Option2Text, "_CompName" : "OptionsModal"}
    return cui_OptionsModal

ui____initial_actions0 = lv.obj()

def d2Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d4Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d6Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d8Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d10Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d12Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d20Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def d100Type_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def DiceParserInput_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def DiceCalculateButton_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def CategoryButton_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def CategoryAndBackButton_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def Toggle_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.VALUE_CHANGED and True:
      ( event_struct )
   return

def ValueInput_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.VALUE_CHANGED and True:
      ( event_struct )
   return

def Slider_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.VALUE_CHANGED and True:
      ( event_struct )
   return

def Dropdown_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.VALUE_CHANGED and True:
      ( event_struct )
   return

def RunActionButton_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def OptionsModal_Options_Opt1_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def OptionsModal_Options_Opt2_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

def MainKeyboard_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.READY and True:
      onKbFinishInput( event_struct )
   return

def HomeButton_eventhandler(event_struct):
   target = event_struct.get_target()
   event = event_struct.code
   if event == lv.EVENT.CLICKED and True:
      ( event_struct )
   return

ui_Screen1 = lv.obj()
SetFlag(ui_Screen1, lv.obj.FLAG.SCROLLABLE, False)

ui_MainContainer = lv.obj(ui_Screen1)
ui_MainContainer.remove_style_all()
ui_MainContainer.set_width(lv.pct(100))
ui_MainContainer.set_height(lv.pct(100))
ui_MainContainer.set_align( lv.ALIGN.CENTER)
SetFlag(ui_MainContainer, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_MainContainer, lv.obj.FLAG.SCROLLABLE, False)

ui_Interface = lv.obj(ui_MainContainer)
ui_Interface.remove_style_all()
ui_Interface.set_width(lv.pct(100))
ui_Interface.set_height(lv.pct(100))
ui_Interface.set_align( lv.ALIGN.CENTER)
SetFlag(ui_Interface, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_Interface, lv.obj.FLAG.SCROLLABLE, False)

ui_InfoHeader = lv.obj(ui_Interface)
ui_InfoHeader.remove_style_all()
ui_InfoHeader.set_width(lv.pct(100))
ui_InfoHeader.set_height(lv.pct(5))
ui_InfoHeader.set_align( lv.ALIGN.TOP_MID)
ui_InfoHeader.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_InfoHeader.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_InfoHeader, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_InfoHeader, lv.obj.FLAG.SCROLLABLE, False)
ui_InfoHeader.set_style_bg_color(lv.color_hex(0x2196F3), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_InfoHeader.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_InfoHeader.set_style_pad_left( 4, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )
ui_InfoHeader.set_style_pad_right( 4, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )
ui_InfoHeader.set_style_pad_top( 2, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )
ui_InfoHeader.set_style_pad_bottom( 2, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )

ui_LeftSection = lv.obj(ui_InfoHeader)
ui_LeftSection.remove_style_all()
ui_LeftSection.set_height(lv.pct(100))
ui_LeftSection.set_flex_grow(1)
ui_LeftSection.set_align( lv.ALIGN.CENTER)
ui_LeftSection.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_LeftSection.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_LeftSection, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_LeftSection, lv.obj.FLAG.SCROLLABLE, False)

ui_WifiStatus = lv.label(ui_LeftSection)
ui_WifiStatus.set_text("Wifi: Not Connected")
ui_WifiStatus.set_width(lv.SIZE_CONTENT)	# 1
ui_WifiStatus.set_height(lv.SIZE_CONTENT)   # 1
ui_WifiStatus.set_align( lv.ALIGN.CENTER)
ui_WifiStatus.set_style_text_color(lv.color_hex(0xFFFFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_WifiStatus.set_style_text_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
ui_WifiStatus.set_style_text_font( lv.font_montserrat_14, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_MiddleSection = lv.obj(ui_InfoHeader)
ui_MiddleSection.remove_style_all()
ui_MiddleSection.set_height(lv.pct(100))
ui_MiddleSection.set_flex_grow(1)
ui_MiddleSection.set_align( lv.ALIGN.CENTER)
ui_MiddleSection.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_MiddleSection.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_MiddleSection, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_MiddleSection, lv.obj.FLAG.SCROLLABLE, False)

ui_Time = lv.label(ui_MiddleSection)
ui_Time.set_text("10:00")
ui_Time.set_width(lv.SIZE_CONTENT)	# 1
ui_Time.set_height(lv.SIZE_CONTENT)   # 1
ui_Time.set_align( lv.ALIGN.CENTER)

ui_RightSection = lv.obj(ui_InfoHeader)
ui_RightSection.remove_style_all()
ui_RightSection.set_height(lv.pct(100))
ui_RightSection.set_flex_grow(1)
ui_RightSection.set_align( lv.ALIGN.CENTER)
ui_RightSection.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_RightSection.set_flex_align(lv.FLEX_ALIGN.END, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_RightSection, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_RightSection, lv.obj.FLAG.SCROLLABLE, False)

ui_Battery = lv.label(ui_RightSection)
ui_Battery.set_text("90% Charge")
ui_Battery.set_width(lv.SIZE_CONTENT)	# 1
ui_Battery.set_height(lv.SIZE_CONTENT)   # 1
ui_Battery.set_align( lv.ALIGN.CENTER)
ui_Battery.set_style_text_color(lv.color_hex(0xFFFFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_Battery.set_style_text_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_AppInterface = lv.obj(ui_Interface)
ui_AppInterface.remove_style_all()
ui_AppInterface.set_width(lv.pct(100))
ui_AppInterface.set_height(lv.pct(95))
ui_AppInterface.set_align( lv.ALIGN.BOTTOM_MID)
ui_AppInterface.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_AppInterface.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_AppInterface, lv.obj.FLAG.HIDDEN, True)
SetFlag(ui_AppInterface, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_AppInterface, lv.obj.FLAG.SCROLLABLE, False)
ui_AppInterface.set_style_pad_left( 30, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_AppInterface.set_style_pad_right( 30, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_AppInterface.set_style_pad_top( 30, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_AppInterface.set_style_pad_bottom( 30, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_AppInterface.set_style_pad_row( 50, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_AppInterface.set_style_pad_column( 50, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_App = ui_App_create(ui_AppInterface)
ui_App.set_x(-200)
ui_App.set_y(-30)

ui_ApplicationScreen = lv.obj(ui_Interface)
ui_ApplicationScreen.remove_style_all()
ui_ApplicationScreen.set_width(lv.pct(100))
ui_ApplicationScreen.set_height(lv.pct(95))
ui_ApplicationScreen.set_align( lv.ALIGN.BOTTOM_MID)
SetFlag(ui_ApplicationScreen, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ApplicationScreen, lv.obj.FLAG.SCROLLABLE, False)

ui_DiceAppScreen = lv.obj(ui_ApplicationScreen)
ui_DiceAppScreen.remove_style_all()
ui_DiceAppScreen.set_width(lv.pct(100))
ui_DiceAppScreen.set_height(lv.pct(100))
ui_DiceAppScreen.set_align( lv.ALIGN.CENTER)
SetFlag(ui_DiceAppScreen, lv.obj.FLAG.HIDDEN, True)
SetFlag(ui_DiceAppScreen, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_DiceAppScreen, lv.obj.FLAG.SCROLLABLE, False)

ui_QuickDiceRolls = lv.obj(ui_DiceAppScreen)
ui_QuickDiceRolls.set_height(120)
ui_QuickDiceRolls.set_width(lv.pct(90))
ui_QuickDiceRolls.set_x(0)
ui_QuickDiceRolls.set_y(50)
ui_QuickDiceRolls.set_align( lv.ALIGN.TOP_MID)
ui_QuickDiceRolls.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_QuickDiceRolls.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_QuickDiceRolls, lv.obj.FLAG.SCROLLABLE, False)

ui_QuickDiceRollerTitle = lv.label(ui_QuickDiceRolls)
ui_QuickDiceRollerTitle.set_text("Quick Dice Roller (Click on the buttons to get results)")
ui_QuickDiceRollerTitle.set_width(lv.SIZE_CONTENT)	# 1
ui_QuickDiceRollerTitle.set_height(lv.SIZE_CONTENT)   # 1
ui_QuickDiceRollerTitle.set_align( lv.ALIGN.CENTER)

ui_DiceRollsButtons = lv.obj(ui_QuickDiceRolls)
ui_DiceRollsButtons.remove_style_all()
ui_DiceRollsButtons.set_height(50)
ui_DiceRollsButtons.set_width(lv.pct(100))
ui_DiceRollsButtons.set_align( lv.ALIGN.CENTER)
ui_DiceRollsButtons.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_DiceRollsButtons.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_DiceRollsButtons, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_DiceRollsButtons, lv.obj.FLAG.SCROLLABLE, False)
ui_DiceRollsButtons.set_style_pad_row( 0, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DiceRollsButtons.set_style_pad_column( 10, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_d2Type = lv.button(ui_DiceRollsButtons)
ui_d2Type.set_height(lv.pct(100))
ui_d2Type.set_flex_grow(1)
ui_d2Type.set_x(-58)
ui_d2Type.set_y(-135)
ui_d2Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d2Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d2Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label1 = lv.label(ui_d2Type)
ui_Label1.set_text("d2")
ui_Label1.set_width(lv.SIZE_CONTENT)	# 1
ui_Label1.set_height(lv.SIZE_CONTENT)   # 1
ui_Label1.set_align( lv.ALIGN.CENTER)

ui_d2Type.add_event_cb(d2Type_eventhandler, lv.EVENT.ALL, None)
ui_d4Type = lv.button(ui_DiceRollsButtons)
ui_d4Type.set_height(lv.pct(100))
ui_d4Type.set_flex_grow(1)
ui_d4Type.set_x(-58)
ui_d4Type.set_y(-135)
ui_d4Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d4Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d4Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label2 = lv.label(ui_d4Type)
ui_Label2.set_text("d4")
ui_Label2.set_width(lv.SIZE_CONTENT)	# 1
ui_Label2.set_height(lv.SIZE_CONTENT)   # 1
ui_Label2.set_align( lv.ALIGN.CENTER)

ui_d4Type.add_event_cb(d4Type_eventhandler, lv.EVENT.ALL, None)
ui_d6Type = lv.button(ui_DiceRollsButtons)
ui_d6Type.set_height(lv.pct(100))
ui_d6Type.set_flex_grow(1)
ui_d6Type.set_x(-58)
ui_d6Type.set_y(-135)
ui_d6Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d6Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d6Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label3 = lv.label(ui_d6Type)
ui_Label3.set_text("d6")
ui_Label3.set_width(lv.SIZE_CONTENT)	# 1
ui_Label3.set_height(lv.SIZE_CONTENT)   # 1
ui_Label3.set_align( lv.ALIGN.CENTER)

ui_d6Type.add_event_cb(d6Type_eventhandler, lv.EVENT.ALL, None)
ui_d8Type = lv.button(ui_DiceRollsButtons)
ui_d8Type.set_height(lv.pct(100))
ui_d8Type.set_flex_grow(1)
ui_d8Type.set_x(-58)
ui_d8Type.set_y(-135)
ui_d8Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d8Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d8Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label4 = lv.label(ui_d8Type)
ui_Label4.set_text("d8")
ui_Label4.set_width(lv.SIZE_CONTENT)	# 1
ui_Label4.set_height(lv.SIZE_CONTENT)   # 1
ui_Label4.set_align( lv.ALIGN.CENTER)

ui_d8Type.add_event_cb(d8Type_eventhandler, lv.EVENT.ALL, None)
ui_d10Type = lv.button(ui_DiceRollsButtons)
ui_d10Type.set_height(lv.pct(100))
ui_d10Type.set_flex_grow(1)
ui_d10Type.set_x(-58)
ui_d10Type.set_y(-135)
ui_d10Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d10Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d10Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label5 = lv.label(ui_d10Type)
ui_Label5.set_text("d10")
ui_Label5.set_width(lv.SIZE_CONTENT)	# 1
ui_Label5.set_height(lv.SIZE_CONTENT)   # 1
ui_Label5.set_align( lv.ALIGN.CENTER)

ui_d10Type.add_event_cb(d10Type_eventhandler, lv.EVENT.ALL, None)
ui_d12Type = lv.button(ui_DiceRollsButtons)
ui_d12Type.set_height(lv.pct(100))
ui_d12Type.set_flex_grow(1)
ui_d12Type.set_x(-58)
ui_d12Type.set_y(-135)
ui_d12Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d12Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d12Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label6 = lv.label(ui_d12Type)
ui_Label6.set_text("d12")
ui_Label6.set_width(lv.SIZE_CONTENT)	# 1
ui_Label6.set_height(lv.SIZE_CONTENT)   # 1
ui_Label6.set_align( lv.ALIGN.CENTER)

ui_d12Type.add_event_cb(d12Type_eventhandler, lv.EVENT.ALL, None)
ui_d20Type = lv.button(ui_DiceRollsButtons)
ui_d20Type.set_height(lv.pct(100))
ui_d20Type.set_flex_grow(1)
ui_d20Type.set_x(-58)
ui_d20Type.set_y(-135)
ui_d20Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d20Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d20Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label7 = lv.label(ui_d20Type)
ui_Label7.set_text("d20")
ui_Label7.set_width(lv.SIZE_CONTENT)	# 1
ui_Label7.set_height(lv.SIZE_CONTENT)   # 1
ui_Label7.set_align( lv.ALIGN.CENTER)

ui_d20Type.add_event_cb(d20Type_eventhandler, lv.EVENT.ALL, None)
ui_d100Type = lv.button(ui_DiceRollsButtons)
ui_d100Type.set_height(lv.pct(100))
ui_d100Type.set_flex_grow(1)
ui_d100Type.set_x(-58)
ui_d100Type.set_y(-135)
ui_d100Type.set_align( lv.ALIGN.CENTER)
SetFlag(ui_d100Type, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_d100Type, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Label8 = lv.label(ui_d100Type)
ui_Label8.set_text("d100")
ui_Label8.set_width(lv.SIZE_CONTENT)	# 1
ui_Label8.set_height(lv.SIZE_CONTENT)   # 1
ui_Label8.set_align( lv.ALIGN.CENTER)

ui_d100Type.add_event_cb(d100Type_eventhandler, lv.EVENT.ALL, None)
ui_DiceRollResult = lv.label(ui_DiceAppScreen)
ui_DiceRollResult.set_text("Result: <Unset>")
ui_DiceRollResult.set_width(lv.SIZE_CONTENT)	# 1
ui_DiceRollResult.set_height(lv.SIZE_CONTENT)   # 1
ui_DiceRollResult.set_align( lv.ALIGN.CENTER)

ui_DiceParser = lv.obj(ui_DiceAppScreen)
ui_DiceParser.set_width(lv.pct(90))
ui_DiceParser.set_height(lv.SIZE_CONTENT)   # 1
ui_DiceParser.set_x(0)
ui_DiceParser.set_y(300)
ui_DiceParser.set_align( lv.ALIGN.TOP_MID)
ui_DiceParser.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_DiceParser.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_DiceParser, lv.obj.FLAG.SCROLLABLE, False)

ui_DiceParserTitle = lv.label(ui_DiceParser)
ui_DiceParserTitle.set_text("Dice Parser: Enter a string of dice rolls. (e.g. \"d20\" or \"4d20 + 10\")")
ui_DiceParserTitle.set_width(lv.SIZE_CONTENT)	# 1
ui_DiceParserTitle.set_height(lv.SIZE_CONTENT)   # 1
ui_DiceParserTitle.set_align( lv.ALIGN.CENTER)

ui_DiceParserInputContainer = lv.obj(ui_DiceParser)
ui_DiceParserInputContainer.remove_style_all()
ui_DiceParserInputContainer.set_height(50)
ui_DiceParserInputContainer.set_width(lv.pct(100))
ui_DiceParserInputContainer.set_align( lv.ALIGN.CENTER)
ui_DiceParserInputContainer.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_DiceParserInputContainer.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_DiceParserInputContainer, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_DiceParserInputContainer, lv.obj.FLAG.SCROLLABLE, False)
ui_DiceParserInputContainer.set_style_pad_row( 0, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DiceParserInputContainer.set_style_pad_column( 15, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_DiceParserInput = lv.textarea(ui_DiceParserInputContainer)
ui_DiceParserInput.set_height(lv.pct(100))
ui_DiceParserInput.set_flex_grow(3)
ui_DiceParserInput.set_placeholder_text("Placeholder...")
ui_DiceParserInput.set_align( lv.ALIGN.CENTER)

ui_DiceParserInput.add_event_cb(DiceParserInput_eventhandler, lv.EVENT.ALL, None)
ui_DiceCalculateButton = lv.button(ui_DiceParserInputContainer)
ui_DiceCalculateButton.set_height(lv.pct(100))
ui_DiceCalculateButton.set_flex_grow(1)
ui_DiceCalculateButton.set_align( lv.ALIGN.CENTER)
SetFlag(ui_DiceCalculateButton, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_DiceCalculateButton, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_DiceCalcLabel = lv.label(ui_DiceCalculateButton)
ui_DiceCalcLabel.set_text("Calculate")
ui_DiceCalcLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_DiceCalcLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_DiceCalcLabel.set_align( lv.ALIGN.CENTER)

ui_DiceCalculateButton.add_event_cb(DiceCalculateButton_eventhandler, lv.EVENT.ALL, None)
ui_SettingsAppScreen = lv.obj(ui_ApplicationScreen)
ui_SettingsAppScreen.remove_style_all()
ui_SettingsAppScreen.set_width(lv.pct(100))
ui_SettingsAppScreen.set_height(lv.pct(100))
ui_SettingsAppScreen.set_align( lv.ALIGN.CENTER)
SetFlag(ui_SettingsAppScreen, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SettingsAppScreen, lv.obj.FLAG.SCROLLABLE, False)

ui_SettingsCategoryList = lv.obj(ui_SettingsAppScreen)
ui_SettingsCategoryList.remove_style_all()
ui_SettingsCategoryList.set_width(lv.pct(100))
ui_SettingsCategoryList.set_height(lv.pct(95))
ui_SettingsCategoryList.set_align( lv.ALIGN.BOTTOM_MID)
ui_SettingsCategoryList.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_SettingsCategoryList.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsCategoryList, lv.obj.FLAG.CLICKABLE, False)
ui_SettingsCategoryList.set_style_pad_row( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsCategoryList.set_style_pad_column( 0, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_SettingsCategoryList.set_style_pad_row( 10, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )
ui_SettingsCategoryList.set_style_pad_column( 20, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )

ui_SettingsMainTitle = lv.label(ui_SettingsCategoryList)
ui_SettingsMainTitle.set_text("Settings")
ui_SettingsMainTitle.set_width(lv.SIZE_CONTENT)	# 100
ui_SettingsMainTitle.set_height(lv.SIZE_CONTENT)   # 1
ui_SettingsMainTitle.set_x(0)
ui_SettingsMainTitle.set_y(30)
ui_SettingsMainTitle.set_align( lv.ALIGN.TOP_MID)
ui_SettingsMainTitle.set_style_pad_left( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsMainTitle.set_style_pad_right( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsMainTitle.set_style_pad_top( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsMainTitle.set_style_pad_bottom( 10, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_CategoryButton = lv.button(ui_SettingsCategoryList)
ui_CategoryButton.set_height(40)
ui_CategoryButton.set_width(lv.pct(80))
ui_CategoryButton.set_align( lv.ALIGN.CENTER)
SetFlag(ui_CategoryButton, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_CategoryButton, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
ui_CategoryButton.set_style_bg_color(lv.color_hex(0x3E3E3E), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_CategoryButton.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_CategoryButtonLabel = lv.label(ui_CategoryButton)
ui_CategoryButtonLabel.set_text("SettingCategory")
ui_CategoryButtonLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_CategoryButtonLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_CategoryButtonLabel.set_align( lv.ALIGN.CENTER)

ui_CategoryButton.add_event_cb(CategoryButton_eventhandler, lv.EVENT.ALL, None)
ui_SettingsCategoryScreen = lv.obj(ui_SettingsAppScreen)
ui_SettingsCategoryScreen.remove_style_all()
ui_SettingsCategoryScreen.set_width(lv.pct(100))
ui_SettingsCategoryScreen.set_height(lv.pct(100))
ui_SettingsCategoryScreen.set_align( lv.ALIGN.BOTTOM_MID)
ui_SettingsCategoryScreen.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_SettingsCategoryScreen.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsCategoryScreen, lv.obj.FLAG.HIDDEN, True)
SetFlag(ui_SettingsCategoryScreen, lv.obj.FLAG.CLICKABLE, False)

ui_SettingsCategoryScreen.set_style_pad_row( 20, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )
ui_SettingsCategoryScreen.set_style_pad_column( 10, lv.PART.SCROLLBAR | lv.STATE.DEFAULT )

ui_CategoryTitleContainer = lv.obj(ui_SettingsCategoryScreen)
ui_CategoryTitleContainer.remove_style_all()
ui_CategoryTitleContainer.set_height(110)
ui_CategoryTitleContainer.set_width(lv.pct(100))
ui_CategoryTitleContainer.set_align( lv.ALIGN.TOP_MID)
ui_CategoryTitleContainer.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_CategoryTitleContainer.set_flex_align(lv.FLEX_ALIGN.END, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_CategoryTitleContainer, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_CategoryTitleContainer, lv.obj.FLAG.SCROLLABLE, False)

ui_CategoryAndBackButton = lv.button(ui_CategoryTitleContainer)
ui_CategoryAndBackButton.set_width(lv.SIZE_CONTENT)	# 1
ui_CategoryAndBackButton.set_height(lv.SIZE_CONTENT)   # 1
ui_CategoryAndBackButton.set_align( lv.ALIGN.CENTER)
SetFlag(ui_CategoryAndBackButton, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_CategoryAndBackButton, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
ui_CategoryAndBackButton.set_style_bg_color(lv.color_hex(0x3A3A3A), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_CategoryAndBackButton.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_SettingsCategoryTitleLabel = lv.label(ui_CategoryAndBackButton)
ui_SettingsCategoryTitleLabel.set_text("Category")
ui_SettingsCategoryTitleLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_SettingsCategoryTitleLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_SettingsCategoryTitleLabel.set_align( lv.ALIGN.CENTER)

ui_CategoryAndBackButton.add_event_cb(CategoryAndBackButton_eventhandler, lv.EVENT.ALL, None)
ui_SettingsCategoryDesc = lv.label(ui_CategoryTitleContainer)
ui_SettingsCategoryDesc.set_text("CategoryDesc")
ui_SettingsCategoryDesc.set_width(lv.SIZE_CONTENT)	# 100
ui_SettingsCategoryDesc.set_height(lv.SIZE_CONTENT)   # 30
ui_SettingsCategoryDesc.set_x(0)
ui_SettingsCategoryDesc.set_y(30)
ui_SettingsCategoryDesc.set_align( lv.ALIGN.TOP_MID)
ui_SettingsCategoryDesc.set_style_pad_left( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsCategoryDesc.set_style_pad_right( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsCategoryDesc.set_style_pad_top( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsCategoryDesc.set_style_pad_bottom( 10, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_SettingsToggleOption = lv.obj(ui_SettingsCategoryScreen)
ui_SettingsToggleOption.remove_style_all()
ui_SettingsToggleOption.set_height(80)
ui_SettingsToggleOption.set_width(lv.pct(90))
ui_SettingsToggleOption.set_align( lv.ALIGN.CENTER)
ui_SettingsToggleOption.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_SettingsToggleOption.set_flex_align(lv.FLEX_ALIGN.SPACE_BETWEEN, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsToggleOption, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SettingsToggleOption, lv.obj.FLAG.SCROLLABLE, False)

ui_ToggleOptionInfo = lv.obj(ui_SettingsToggleOption)
ui_ToggleOptionInfo.remove_style_all()
ui_ToggleOptionInfo.set_height(lv.pct(100))
ui_ToggleOptionInfo.set_flex_grow(1)
ui_ToggleOptionInfo.set_align( lv.ALIGN.CENTER)
ui_ToggleOptionInfo.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_ToggleOptionInfo.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_ToggleOptionInfo, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ToggleOptionInfo, lv.obj.FLAG.SCROLLABLE, False)
ui_ToggleOptionInfo.set_style_pad_row( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ToggleOptionInfo.set_style_pad_column( 0, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_OptionLabelStyler = lv.obj(ui_ToggleOptionInfo)
ui_OptionLabelStyler.remove_style_all()
ui_OptionLabelStyler.set_width(lv.SIZE_CONTENT)	# 100
ui_OptionLabelStyler.set_height(lv.SIZE_CONTENT)   # 50
ui_OptionLabelStyler.set_align( lv.ALIGN.CENTER)
SetFlag(ui_OptionLabelStyler, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_OptionLabelStyler, lv.obj.FLAG.SCROLLABLE, False)
ui_OptionLabelStyler.set_style_radius( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_OptionLabelStyler.set_style_bg_color(lv.color_hex(0xA0BFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_OptionLabelStyler.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
ui_OptionLabelStyler.set_style_pad_left( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_OptionLabelStyler.set_style_pad_right( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_OptionLabelStyler.set_style_pad_top( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_OptionLabelStyler.set_style_pad_bottom( 5, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_ToggleOptionLabel = lv.label(ui_OptionLabelStyler)
ui_ToggleOptionLabel.set_text("ToggleOption")
ui_ToggleOptionLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_ToggleOptionLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_ToggleOptionLabel.set_align( lv.ALIGN.CENTER)

ui_ToggleOptionDesc = lv.label(ui_ToggleOptionInfo)
ui_ToggleOptionDesc.set_text("ToggleOptionDescription")
ui_ToggleOptionDesc.set_width(lv.SIZE_CONTENT)	# 1
ui_ToggleOptionDesc.set_height(lv.SIZE_CONTENT)   # 1
ui_ToggleOptionDesc.set_align( lv.ALIGN.CENTER)

ui_Toggle = lv.switch(ui_SettingsToggleOption)
ui_Toggle.set_width(50)
ui_Toggle.set_height(25)
ui_Toggle.set_align( lv.ALIGN.CENTER)
ui_Toggle.add_state(lv.STATE.CHECKED * True | lv.STATE.PRESSED * False | lv.STATE.FOCUSED * False |lv.STATE.DISABLED * False | lv.STATE.EDITED * False | lv.STATE.USER_1 * False | lv.STATE.USER_2 * False | lv.STATE.USER_3 * False | lv.STATE.USER_4 * False)
ui_Toggle.remove_state(lv.STATE.CHECKED * (not True) | lv.STATE.PRESSED * (not False) | lv.STATE.FOCUSED * (not False) | lv.STATE.DISABLED * (not False) | lv.STATE.EDITED * (not False) | lv.STATE.USER_1 * (not False) | lv.STATE.USER_2 * (not False) | lv.STATE.USER_3 * (not False) | lv.STATE.USER_4 * (not False))

ui_Toggle.add_event_cb(Toggle_eventhandler, lv.EVENT.ALL, None)
ui_SettingsInputValueOption = lv.obj(ui_SettingsCategoryScreen)
ui_SettingsInputValueOption.remove_style_all()
ui_SettingsInputValueOption.set_height(80)
ui_SettingsInputValueOption.set_width(lv.pct(90))
ui_SettingsInputValueOption.set_align( lv.ALIGN.CENTER)
ui_SettingsInputValueOption.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_SettingsInputValueOption.set_flex_align(lv.FLEX_ALIGN.SPACE_BETWEEN, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsInputValueOption, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SettingsInputValueOption, lv.obj.FLAG.SCROLLABLE, False)

ui_ValueOptionInfo = lv.obj(ui_SettingsInputValueOption)
ui_ValueOptionInfo.remove_style_all()
ui_ValueOptionInfo.set_height(lv.pct(100))
ui_ValueOptionInfo.set_flex_grow(1)
ui_ValueOptionInfo.set_align( lv.ALIGN.CENTER)
ui_ValueOptionInfo.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_ValueOptionInfo.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_ValueOptionInfo, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ValueOptionInfo, lv.obj.FLAG.SCROLLABLE, False)
ui_ValueOptionInfo.set_style_pad_row( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ValueOptionInfo.set_style_pad_column( 0, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_ValueOptionLabelStyler = lv.obj(ui_ValueOptionInfo)
ui_ValueOptionLabelStyler.remove_style_all()
ui_ValueOptionLabelStyler.set_width(lv.SIZE_CONTENT)	# 100
ui_ValueOptionLabelStyler.set_height(lv.SIZE_CONTENT)   # 50
ui_ValueOptionLabelStyler.set_align( lv.ALIGN.CENTER)
SetFlag(ui_ValueOptionLabelStyler, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ValueOptionLabelStyler, lv.obj.FLAG.SCROLLABLE, False)
ui_ValueOptionLabelStyler.set_style_radius( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ValueOptionLabelStyler.set_style_bg_color(lv.color_hex(0xA0BFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ValueOptionLabelStyler.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
ui_ValueOptionLabelStyler.set_style_pad_left( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ValueOptionLabelStyler.set_style_pad_right( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ValueOptionLabelStyler.set_style_pad_top( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ValueOptionLabelStyler.set_style_pad_bottom( 5, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_ValueOptionLabel = lv.label(ui_ValueOptionLabelStyler)
ui_ValueOptionLabel.set_text("ValueOption")
ui_ValueOptionLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_ValueOptionLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_ValueOptionLabel.set_align( lv.ALIGN.CENTER)

ui_ValueOptionDesc = lv.label(ui_ValueOptionInfo)
ui_ValueOptionDesc.set_text("ValueOptionDescription")
ui_ValueOptionDesc.set_width(lv.SIZE_CONTENT)	# 1
ui_ValueOptionDesc.set_height(lv.SIZE_CONTENT)   # 1
ui_ValueOptionDesc.set_align( lv.ALIGN.CENTER)

ui_ValueInput = lv.textarea(ui_SettingsInputValueOption)
ui_ValueInput.set_width(lv.pct(30))
ui_ValueInput.set_height(lv.pct(50))
ui_ValueInput.set_placeholder_text("Value...")
ui_ValueInput.set_align( lv.ALIGN.CENTER)

ui_ValueInput.add_event_cb(ValueInput_eventhandler, lv.EVENT.ALL, None)
ui_SettingsSliderOption = lv.obj(ui_SettingsCategoryScreen)
ui_SettingsSliderOption.remove_style_all()
ui_SettingsSliderOption.set_height(80)
ui_SettingsSliderOption.set_width(lv.pct(90))
ui_SettingsSliderOption.set_align( lv.ALIGN.CENTER)
ui_SettingsSliderOption.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_SettingsSliderOption.set_flex_align(lv.FLEX_ALIGN.SPACE_BETWEEN, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsSliderOption, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SettingsSliderOption, lv.obj.FLAG.SCROLLABLE, False)
ui_SettingsSliderOption.set_style_pad_row( 0, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SettingsSliderOption.set_style_pad_column( 20, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_SliderOptionInfo = lv.obj(ui_SettingsSliderOption)
ui_SliderOptionInfo.remove_style_all()
ui_SliderOptionInfo.set_height(lv.pct(100))
ui_SliderOptionInfo.set_flex_grow(1)
ui_SliderOptionInfo.set_align( lv.ALIGN.CENTER)
ui_SliderOptionInfo.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_SliderOptionInfo.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_SliderOptionInfo, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SliderOptionInfo, lv.obj.FLAG.SCROLLABLE, False)
ui_SliderOptionInfo.set_style_pad_row( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SliderOptionInfo.set_style_pad_column( 0, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_SliderOptionLabelStyler = lv.obj(ui_SliderOptionInfo)
ui_SliderOptionLabelStyler.remove_style_all()
ui_SliderOptionLabelStyler.set_width(lv.SIZE_CONTENT)	# 100
ui_SliderOptionLabelStyler.set_height(lv.SIZE_CONTENT)   # 50
ui_SliderOptionLabelStyler.set_align( lv.ALIGN.CENTER)
SetFlag(ui_SliderOptionLabelStyler, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SliderOptionLabelStyler, lv.obj.FLAG.SCROLLABLE, False)
ui_SliderOptionLabelStyler.set_style_radius( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SliderOptionLabelStyler.set_style_bg_color(lv.color_hex(0xA0BFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SliderOptionLabelStyler.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
ui_SliderOptionLabelStyler.set_style_pad_left( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SliderOptionLabelStyler.set_style_pad_right( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SliderOptionLabelStyler.set_style_pad_top( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_SliderOptionLabelStyler.set_style_pad_bottom( 5, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_SliderOptionLabel = lv.label(ui_SliderOptionLabelStyler)
ui_SliderOptionLabel.set_text("SliderOption")
ui_SliderOptionLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_SliderOptionLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_SliderOptionLabel.set_align( lv.ALIGN.CENTER)

ui_SliderOptionDesc = lv.label(ui_SliderOptionInfo)
ui_SliderOptionDesc.set_text("SliderOptionDescription")
ui_SliderOptionDesc.set_width(lv.SIZE_CONTENT)	# 1
ui_SliderOptionDesc.set_height(lv.SIZE_CONTENT)   # 1
ui_SliderOptionDesc.set_align( lv.ALIGN.CENTER)

ui_SliderValueLabel = lv.label(ui_SettingsSliderOption)
ui_SliderValueLabel.set_text("SliderValue")
ui_SliderValueLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_SliderValueLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_SliderValueLabel.set_align( lv.ALIGN.CENTER)

ui_Slider = lv.slider(ui_SettingsSliderOption)
ui_Slider.set_width(lv.pct(30))
ui_Slider.set_height(lv.pct(20))
ui_Slider.set_align( lv.ALIGN.CENTER)
if 1 < 3: ui_Slider.set_range(1,3)
ui_Slider.set_value(0, lv.ANIM.OFF)  # need refresh: 1,3
if 'NORMAL' is 'RANGE': ui_Slider.set_left_value(0, lv.ANIM.OFF)

#Compensating for LVGL9.1 draw crash with bar/slider max value when top-padding is nonzero and right-padding is 0
if (ui_Slider.get_style_pad_top(lv.PART.MAIN) > 0): ui_Slider.set_style_pad_right( ui_Slider.get_style_pad_right(lv.PART.MAIN) + 1, lv.PART.MAIN )
ui_Slider.add_event_cb(Slider_eventhandler, lv.EVENT.ALL, None)
ui_SettingsDropdownOption = lv.obj(ui_SettingsCategoryScreen)
ui_SettingsDropdownOption.remove_style_all()
ui_SettingsDropdownOption.set_height(80)
ui_SettingsDropdownOption.set_width(lv.pct(90))
ui_SettingsDropdownOption.set_align( lv.ALIGN.CENTER)
ui_SettingsDropdownOption.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_SettingsDropdownOption.set_flex_align(lv.FLEX_ALIGN.SPACE_BETWEEN, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsDropdownOption, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SettingsDropdownOption, lv.obj.FLAG.SCROLLABLE, False)

ui_DropdownOptionInfo = lv.obj(ui_SettingsDropdownOption)
ui_DropdownOptionInfo.remove_style_all()
ui_DropdownOptionInfo.set_height(lv.pct(100))
ui_DropdownOptionInfo.set_flex_grow(1)
ui_DropdownOptionInfo.set_align( lv.ALIGN.CENTER)
ui_DropdownOptionInfo.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_DropdownOptionInfo.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_DropdownOptionInfo, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_DropdownOptionInfo, lv.obj.FLAG.SCROLLABLE, False)
ui_DropdownOptionInfo.set_style_pad_row( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DropdownOptionInfo.set_style_pad_column( 0, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_DropdownOptionLabelStyler = lv.obj(ui_DropdownOptionInfo)
ui_DropdownOptionLabelStyler.remove_style_all()
ui_DropdownOptionLabelStyler.set_width(lv.SIZE_CONTENT)	# 100
ui_DropdownOptionLabelStyler.set_height(lv.SIZE_CONTENT)   # 50
ui_DropdownOptionLabelStyler.set_align( lv.ALIGN.CENTER)
SetFlag(ui_DropdownOptionLabelStyler, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_DropdownOptionLabelStyler, lv.obj.FLAG.SCROLLABLE, False)
ui_DropdownOptionLabelStyler.set_style_radius( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DropdownOptionLabelStyler.set_style_bg_color(lv.color_hex(0xA0BFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DropdownOptionLabelStyler.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
ui_DropdownOptionLabelStyler.set_style_pad_left( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DropdownOptionLabelStyler.set_style_pad_right( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DropdownOptionLabelStyler.set_style_pad_top( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_DropdownOptionLabelStyler.set_style_pad_bottom( 5, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_DropdownOptionLabel = lv.label(ui_DropdownOptionLabelStyler)
ui_DropdownOptionLabel.set_text("DropdownOption")
ui_DropdownOptionLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_DropdownOptionLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_DropdownOptionLabel.set_align( lv.ALIGN.CENTER)

ui_DropdownOptionDesc = lv.label(ui_DropdownOptionInfo)
ui_DropdownOptionDesc.set_text("DropdownOptionDescription")
ui_DropdownOptionDesc.set_width(lv.SIZE_CONTENT)	# 1
ui_DropdownOptionDesc.set_height(lv.SIZE_CONTENT)   # 1
ui_DropdownOptionDesc.set_align( lv.ALIGN.CENTER)

ui_Dropdown = lv.dropdown(ui_SettingsDropdownOption)
ui_Dropdown.set_options("Option 1\nOption 2\nOption 3")
ui_Dropdown.set_text( "Option 1" if len("Option 1")>0 else None)
ui_Dropdown.set_width(lv.pct(30))
ui_Dropdown.set_height(lv.SIZE_CONTENT)   # 1
ui_Dropdown.set_align( lv.ALIGN.CENTER)
SetFlag(ui_Dropdown, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_Dropdown.add_event_cb(Dropdown_eventhandler, lv.EVENT.ALL, None)
ui_SettingsActionOption = lv.obj(ui_SettingsCategoryScreen)
ui_SettingsActionOption.remove_style_all()
ui_SettingsActionOption.set_height(80)
ui_SettingsActionOption.set_width(lv.pct(90))
ui_SettingsActionOption.set_align( lv.ALIGN.CENTER)
ui_SettingsActionOption.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_SettingsActionOption.set_flex_align(lv.FLEX_ALIGN.SPACE_BETWEEN, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.CENTER)
SetFlag(ui_SettingsActionOption, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_SettingsActionOption, lv.obj.FLAG.SCROLLABLE, False)

ui_ActionOptionInfo = lv.obj(ui_SettingsActionOption)
ui_ActionOptionInfo.remove_style_all()
ui_ActionOptionInfo.set_height(lv.pct(100))
ui_ActionOptionInfo.set_flex_grow(1)
ui_ActionOptionInfo.set_align( lv.ALIGN.CENTER)
ui_ActionOptionInfo.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_ActionOptionInfo.set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_ActionOptionInfo, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ActionOptionInfo, lv.obj.FLAG.SCROLLABLE, False)
ui_ActionOptionInfo.set_style_pad_row( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ActionOptionInfo.set_style_pad_column( 0, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_ActionOptionLabelStyler = lv.obj(ui_ActionOptionInfo)
ui_ActionOptionLabelStyler.remove_style_all()
ui_ActionOptionLabelStyler.set_width(lv.SIZE_CONTENT)	# 100
ui_ActionOptionLabelStyler.set_height(lv.SIZE_CONTENT)   # 50
ui_ActionOptionLabelStyler.set_align( lv.ALIGN.CENTER)
SetFlag(ui_ActionOptionLabelStyler, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ActionOptionLabelStyler, lv.obj.FLAG.SCROLLABLE, False)
ui_ActionOptionLabelStyler.set_style_radius( 10, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ActionOptionLabelStyler.set_style_bg_color(lv.color_hex(0xA0BFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ActionOptionLabelStyler.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )
ui_ActionOptionLabelStyler.set_style_pad_left( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ActionOptionLabelStyler.set_style_pad_right( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ActionOptionLabelStyler.set_style_pad_top( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ActionOptionLabelStyler.set_style_pad_bottom( 5, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_ActionOptionLabel = lv.label(ui_ActionOptionLabelStyler)
ui_ActionOptionLabel.set_text("ActionOption")
ui_ActionOptionLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_ActionOptionLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_ActionOptionLabel.set_align( lv.ALIGN.CENTER)

ui_ActionOptionDesc = lv.label(ui_ActionOptionInfo)
ui_ActionOptionDesc.set_text("ActionOptionDescription")
ui_ActionOptionDesc.set_width(lv.SIZE_CONTENT)	# 1
ui_ActionOptionDesc.set_height(lv.SIZE_CONTENT)   # 1
ui_ActionOptionDesc.set_align( lv.ALIGN.CENTER)

ui_RunActionButton = lv.button(ui_SettingsActionOption)
ui_RunActionButton.set_width(lv.SIZE_CONTENT)	# 1
ui_RunActionButton.set_height(lv.SIZE_CONTENT)   # 50
ui_RunActionButton.set_align( lv.ALIGN.CENTER)
SetFlag(ui_RunActionButton, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_RunActionButton, lv.obj.FLAG.SCROLL_ON_FOCUS, True)

ui_RunActionButtonLabel = lv.label(ui_RunActionButton)
ui_RunActionButtonLabel.set_text("Run Action")
ui_RunActionButtonLabel.set_width(lv.SIZE_CONTENT)	# 1
ui_RunActionButtonLabel.set_height(lv.SIZE_CONTENT)   # 1
ui_RunActionButtonLabel.set_align( lv.ALIGN.CENTER)

ui_RunActionButton.add_event_cb(RunActionButton_eventhandler, lv.EVENT.ALL, None)
ui_OverInterface = lv.obj(ui_MainContainer)
ui_OverInterface.remove_style_all()
ui_OverInterface.set_width(lv.pct(100))
ui_OverInterface.set_height(lv.pct(100))
ui_OverInterface.set_align( lv.ALIGN.CENTER)
SetFlag(ui_OverInterface, lv.obj.FLAG.HIDDEN, True)
SetFlag(ui_OverInterface, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_OverInterface, lv.obj.FLAG.SCROLLABLE, False)

ui_ModalContainer = lv.obj(ui_OverInterface)
ui_ModalContainer.remove_style_all()
ui_ModalContainer.set_width(lv.pct(100))
ui_ModalContainer.set_height(lv.pct(100))
ui_ModalContainer.set_align( lv.ALIGN.CENTER)
SetFlag(ui_ModalContainer, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_ModalContainer, lv.obj.FLAG.SCROLLABLE, False)
ui_ModalContainer.set_style_bg_color(lv.color_hex(0x101010), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_ModalContainer.set_style_bg_opa(100, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_OptionsModal = ui_OptionsModal_create(ui_ModalContainer)
ui_OptionsModal.set_x(0)
ui_OptionsModal.set_y(0)

ui_comp_get_child(ui_OptionsModal, "Options_Opt1").add_event_cb(OptionsModal_Options_Opt1_eventhandler, lv.EVENT.ALL, None)

ui_comp_get_child(ui_OptionsModal, "Options_Opt2").add_event_cb(OptionsModal_Options_Opt2_eventhandler, lv.EVENT.ALL, None)
ui_KeyboardContainer = lv.obj(ui_OverInterface)
ui_KeyboardContainer.remove_style_all()
ui_KeyboardContainer.set_width(lv.pct(100))
ui_KeyboardContainer.set_height(lv.pct(100))
ui_KeyboardContainer.set_align( lv.ALIGN.CENTER)
ui_KeyboardContainer.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_KeyboardContainer.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START)
SetFlag(ui_KeyboardContainer, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_KeyboardContainer, lv.obj.FLAG.SCROLLABLE, False)
ui_KeyboardContainer.set_style_bg_color(lv.color_hex(0x000000), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_KeyboardContainer.set_style_bg_opa(100, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_PeerView = lv.obj(ui_KeyboardContainer)
ui_PeerView.remove_style_all()
ui_PeerView.set_width(lv.pct(100))
ui_PeerView.set_height(lv.pct(10))
ui_PeerView.set_align( lv.ALIGN.CENTER)
SetFlag(ui_PeerView, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_PeerView, lv.obj.FLAG.SCROLLABLE, False)

ui_KeyboardContent = lv.textarea(ui_KeyboardContainer)
ui_KeyboardContent.set_width(lv.pct(100))
ui_KeyboardContent.set_height(lv.pct(30))
ui_KeyboardContent.set_placeholder_text("Placeholder...")
ui_KeyboardContent.set_x(-321)
ui_KeyboardContent.set_y(-183)
ui_KeyboardContent.set_align( lv.ALIGN.CENTER)

ui_MainKeyboard = lv.keyboard(ui_KeyboardContainer)
ui_MainKeyboard.set_width(lv.pct(100))
ui_MainKeyboard.set_height(lv.pct(60))
ui_MainKeyboard.set_align( lv.ALIGN.BOTTOM_MID)

#if 'ui_KeyboardContent' in globals():
ui_MainKeyboard.add_event_cb(MainKeyboard_eventhandler, lv.EVENT.ALL, None)
ui_TopGuide = lv.obj(ui_MainContainer)
ui_TopGuide.remove_style_all()
ui_TopGuide.set_width(80)
ui_TopGuide.set_height(50)
ui_TopGuide.set_align( lv.ALIGN.TOP_MID)
ui_TopGuide.set_flex_flow(lv.FLEX_FLOW.ROW)
ui_TopGuide.set_flex_align(lv.FLEX_ALIGN.END, lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START)
SetFlag(ui_TopGuide, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_TopGuide, lv.obj.FLAG.SCROLLABLE, False)

ui_HomeButton = lv.button(ui_TopGuide)
ui_HomeButton.set_height(45)
ui_HomeButton.set_width(lv.pct(100))
ui_HomeButton.set_align( lv.ALIGN.CENTER)
SetFlag(ui_HomeButton, lv.obj.FLAG.SCROLLABLE, False)
SetFlag(ui_HomeButton, lv.obj.FLAG.SCROLL_ON_FOCUS, True)
ui_HomeButton.set_style_radius( 50, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_HomeButton.set_style_bg_color(lv.color_hex(0x2196F3), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_HomeButton.set_style_bg_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_HomeButtonText = lv.label(ui_HomeButton)
ui_HomeButtonText.set_text("Home")
ui_HomeButtonText.set_width(lv.SIZE_CONTENT)	# 1
ui_HomeButtonText.set_height(lv.SIZE_CONTENT)   # 1
ui_HomeButtonText.set_align( lv.ALIGN.CENTER)
ui_HomeButtonText.set_style_text_color(lv.color_hex(0xFFFFFF), lv.PART.MAIN | lv.STATE.DEFAULT )
ui_HomeButtonText.set_style_text_opa(255, lv.PART.MAIN| lv.STATE.DEFAULT )

ui_HomeButton.add_event_cb(HomeButton_eventhandler, lv.EVENT.ALL, None)
ui_NotificationsContainer = lv.obj(ui_MainContainer)
ui_NotificationsContainer.remove_style_all()
ui_NotificationsContainer.set_height(80)
ui_NotificationsContainer.set_width(lv.pct(40))
ui_NotificationsContainer.set_align( lv.ALIGN.TOP_RIGHT)
ui_NotificationsContainer.set_flex_flow(lv.FLEX_FLOW.COLUMN)
ui_NotificationsContainer.set_flex_align(lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.END)
SetFlag(ui_NotificationsContainer, lv.obj.FLAG.CLICKABLE, False)
SetFlag(ui_NotificationsContainer, lv.obj.FLAG.SCROLLABLE, False)
ui_NotificationsContainer.set_style_pad_left( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_NotificationsContainer.set_style_pad_right( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_NotificationsContainer.set_style_pad_top( 5, lv.PART.MAIN | lv.STATE.DEFAULT )
ui_NotificationsContainer.set_style_pad_bottom( 5, lv.PART.MAIN | lv.STATE.DEFAULT )

ui_Notification = ui_Notification_create(ui_NotificationsContainer)
ui_Notification.set_x(0)
ui_Notification.set_y(0)

ui_MainKeyboard.set_textarea(ui_KeyboardContent)

lv.screen_load(ui_Screen1)
